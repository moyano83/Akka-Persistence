akka.persistence.journal.plugin = "akka.persistence.journal.leveldb" # This is a simple google light database
akka.persistence.journal.leveldb.dir = "target/part1/journal"

akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.snapshot-store.local.dir = "target/part1/snapshots"

localStores{
  akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
  akka.persistence.journal.leveldb.dir = "target/part2localstores/journal"
  akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
  akka.persistence.snapshot-store.local.dir = "target/part2localstores/snapshots"

  # The journal can be persisted with a so call compaction interval. The journal can grow qute big, so we can trigger a
  # compaction of the journal
  akka.persistence.journal.leveldb.compaction-intervals{
    # Number of messages after which you want to start compaction per persistent id
    # After 1000 messages levelDB will start compacting messages
    # Level DB splits its journal in several files, so it is hard to test this feature
    simplePersistentActor = 1000
    "*" = 5000 # All other actors
  }
}

postgresSQL{
  akka.persistence.journal.plugin = "jdbc-journal" # Plugin for all jdbc connections
  akka.persistence.snapshot-store.plugin = "jdbc-snapshot-store"
  akka-persistence-jdbc{
    shared-databases{
      slick{ #slick is the API that alla uses to connect to the DB
        profile = "slick.jdbc.PostgresProfile$" #Note the dollar sign
        db { # Details of the DB to be used
          numThreads = 10
          driver = "org.postgresql.Driver"
          url = "jdbc:postgresql://localhost:5432/testdb" # This is set in <project>/sql/create-database.sql
          user = "docker" # This details are set in docker.compose at the root of the project
          password = "docker"
        }
      }
    }
  }
  jdbc-journal {
    use-shared-db = "slick"
  }
  jdbc-snapshot-store {
    use-shared-db = "slick"
  }
}
cassandraDemo {
  # This configuration has a lot of default values, that we can also configure in case of being distinct
  # Default values can be seen in:
  # https://github.com/akka/akka-persistence-cassandra/blob/master/core/src/main/resources/reference.conf
  akka.persistence.journal.plugin = "cassandra-journal"
  akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"
}

SerializationDemo{
  akka.persistence.journal.plugin = "cassandra-journal"
  akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

  akka.actor{
    serializers {
      java ="akka.serialization.JavaSerializer"
      serializer_user_register ="part2.storesandserialization.CustomSerializer"
    }

    # We need to bind which classes will be used to serialize which events
    serialization-bindings{
      "part2.storesandserialization.UserRegister" = serializer_user_register
      # For the rest of the classes java serializer is used by default
    }
  }
}